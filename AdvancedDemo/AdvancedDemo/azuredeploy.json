{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "AdvDemoStorageType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "AdvDemoWindowsOSVersion": {
      "type": "string",
      "defaultValue": "2016-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "2016-Datacenter",
        "Windows-Server-Technical-Preview"
      ]
    },
    "AdvDemoClientOSVersion":{
      "type":"string",
      "defaultValue":"Windows-10-N-x64",
      "allowedValues": [
        "Win7-SP1-ENT-N-x64",
        "Win81-ENT-N-x64",
        "Windows-10-N-x64"
      ]
    },
    "AdvDemoVmSize": {
      "type": "string",
      "defaultValue": "Basic_A2",
      "allowedValues": [
        "Basic_A1",
        "Basic_A2",
        "Basic_A3",
        "Basic_A4",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4"
      ]
    },
    "AdvDemoAdminUserName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "labadmin"
    },
    "AdvDemoAdminPassword": {
      "type": "securestring"
    },
    "AdvDemoDCName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "Demo-AD"
    },
    "AdvDemoADFSName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "Demo-ADFS"
    },
    "AdvDemoWAPName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "Demo-WAP"
    },
    "AdvDemoClientName":{
      "type":"string",
      "minLength": 1,
      "defaultValue": "Demo-Client"
    },
    "AdvDemoDomain":{
      "type":"string",
      "minLength": 1
    }
    /*"AdvDemoWAP-pipDnsName": {
      "type": "string",
      "minLength": 1
    },
    "AdvDemoGatwayDns":{
      "type": "string",
      "minLength": 1
    },
    "AdvDemoClientDNS":{
      "type":"string",
      "minLength": 1
    },*/
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
      },
      "defaultValue": "https://raw.githubusercontent.com/dmcwee/azure/tspdemos/AdvancedDemo/AdvancedDemo/DSC/AdvDemoDSC.zip"
    }
  },
  "variables": {
    "tmpDemoStorageName": "[concat('AdvDemoStorage', uniqueString(resourceGroup().id))]",
    "AdvDemoStorageName": "[toLower(substring(variables('tmpDemoStorageName'), 0, min(16, length(variables('tmpDemoStorageName')))))]",

    /* Windows OS Publisher Variables */
    "AdvDemoWinImagePublisher": "MicrosoftWindowsServer",
    "AdvDemoWinImageOffer": "WindowsServer",
    "AdvDemoClientImagePublisher":"MicrosoftVisualStudio",
    "AdvDemoClientImageOffer":"Windows",

    /* VNet Variables */
    "AdvDemoNetPrefix": "10.0.0.0/16",
    "AdvDemoNetSubnet1Name": "Subnet-1",
    "AdvDemoNetSubnet1Prefix": "10.0.0.0/24",
    "AdvDemoGatewaySubnetPrefix":"10.0.2.0/24",
    "AdvDemoVnetID": "[resourceId('Microsoft.Network/virtualNetworks', 'AdvDemoNet')]",
    "AdvDemoSubnetRef": "[concat(variables('AdvDemoVnetID'), '/subnets/', variables('AdvDemoNetSubnet1Name'))]",
    "AdvDemoGatwayPIPName": "VNet-GWPip",

    /* VM VHD Storage location */
    "AdvDemoStorageAccountContainerName": "vhds",

    /* DC VM Variables */
    "AdvDemoDCNicName": "[concat(parameters('AdvDemoDCName'), '-NIC')]",

    /* ADFS VM Variables */
    "AdvDemoADFSNicName": "[concat(parameters('AdvDemoADFSName'), '-NIC')]",

    /* WAP VM Variables */
    "AdvDemoWAPNicName": "[concat(parameters('AdvDemoWAPName'), '-NIC')]",
    "AdvDemoWAP-pipName": "[concat(parameters('AdvDemoWAPName'), '-PIP')]",

    /* Client VM Variables */
    "AdvDemoClientNICName":"[concat(parameters('AdvDemoClientName'), '-NIC')]",
    "AdvDemoClientPIP":"[concat(parameters('AdvDemoClientName'), '-PIP')]"
  },
  "resources": [
    /*
    Create Storage Account
    */
    {
      "name": "[variables('AdvDemoStorageName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-01-01",
      "sku": {
        "name": "[parameters('AdvDemoStorageType')]"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "AdvDemoStorage"
      },
      "kind": "Storage"
    },

    /*
    Create Virtual Network
    */
    {
      "name": "AdvDemoNet",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "AdvDemoNet"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('AdvDemoNetPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('AdvDemoNetSubnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('AdvDemoNetSubnet1Prefix')]"
            }
          },
          {
            "name": "GatewaySubnet",
            "properties":{
              "addressPrefix": "[variables('AdvDemoGatewaySubnetPrefix')]"
            }
          }
        ]
      }
    },

    /*
    Create NIC for Domain Controller
    */
    {
      "name": "[variables('AdvDemoDCNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[variables('AdvDemoVnetID')]"
      ],
      "tags": {
        "displayName": "AdvDemoDCNic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "10.0.0.10",
              "subnet": {
                "id": "[variables('AdvDemoSubnetRef')]"
              }
            }
          }
        ]
      }
    },

    /*
    Create the Domain Controller
    */
    {
      "name": "[parameters('AdvDemoDCName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('AdvDemoStorageName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('AdvDemoDCNicName'))]"
      ],
      "tags": {
        "displayName": "AdvDemoDC"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('AdvDemoVmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('AdvDemoDCName')]",
          "adminUsername": "[parameters('AdvDemoAdminUserName')]",
          "adminPassword": "[parameters('AdvDemoAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('AdvDemoWinImagePublisher')]",
            "offer": "[variables('AdvDemoWinImageOffer')]",
            "sku": "[parameters('AdvDemoWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "AdvDemoDCOSDisk",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('AdvDemoStorageName')), '2016-01-01').primaryEndpoints.blob, variables('AdvDemoStorageAccountContainerName'), '/', parameters('AdvDemoDCName'), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "AdvDemoDCDataDisk",
              "caching": "None",
              "createOption": "Empty",
              "diskSizeGB": "50",
              "lun": 0,
              "vhd": {
                "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('AdvDemoStorageName')), '2016-01-01').primaryEndpoints.blob, variables('AdvDemoStorageAccountContainerName'), '/', parameters('AdvDemoDCName'), '-datadisk.vhd')]"
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('AdvDemoDCNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "Microsoft.Powershell.DSC",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2016-03-30",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('AdvDemoDCName'))]"
          ],
          "tags": {
            "displayName": "DomainControllerDSC"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.9",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "configuration": {
                "url": "[parameters('_artifactsLocation')]",
                "script": "DomainControllerDSC.ps1",
                "function": "Main"
              },
              "configurationArguments": {
                "nodeName": "[parameters('AdvDemoDCName')]",
                "domainName":"[parameters('AdvDemoDomain')]"
              }
            },
            "protectedSettings": {
              "configurationArguments":{
                "adminAccount": {
                  "UserName": "[parameters('AdvDemoAdminUserName')]",
                  "Password": "[parameters('AdvDemoAdminPassword')]"
                }
              }
            }
          }
        }
      ]
    },
    /*
    Create ADFS VM NIC
    */
    {
      "name": "[variables('AdvDemoADFSNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[variables('AdvDemoVnetID')]"
      ],
      "tags": {
        "displayName": "AdvDemoADFSNic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "10.0.0.11",
              "subnet": {
                "id": "[variables('AdvDemoSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    /*
    Create ADFS VM
    */
    {
      "name": "[parameters('AdvDemoADFSName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('AdvDemoStorageName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('AdvDemoADFSNicName'))]"
      ],
      "tags": {
        "displayName": "AdvDemoADFS"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('AdvDemoVmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('AdvDemoADFSName')]",
          "adminUsername": "[parameters('AdvDemoAdminUsername')]",
          "adminPassword": "[parameters('AdvDemoAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('AdvDemoWinImagePublisher')]",
            "offer": "[variables('AdvDemoWinImageOffer')]",
            "sku": "[parameters('AdvDemoWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "AdvDemoADFSOSDisk",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('AdvDemoStorageName')), '2016-01-01').primaryEndpoints.blob, variables('AdvDemoStorageAccountContainerName'), '/', parameters('AdvDemoADFSName'), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('AdvDemoADFSNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "Microsoft.Powershell.DSC",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2016-03-30",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('AdvDemoADFSName'))]"
          ],
          "tags": {
            "displayName": "ADFSDSC"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.9",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "configuration": {
                "url": "[parameters('_artifactsLocation')]",
                "script": "ADFSDSC.ps1",
                "function": "Main"
              },
              "configurationArguments": {
                "nodeName": "[parameters('AdvDemoADFSName')]"
              }
            }
          }
        }
      ]
    },

    /*
    Create WAP NIC
    */
    {
      "name": "[variables('AdvDemoWAPNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[variables('AdvDemoVnetID')]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('AdvDemoWAP-pipName'))]"
      ],
      "tags": {
        "displayName": "AdvDemoWAPENic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "10.0.0.12",
              "subnet": {
                "id": "[variables('AdvDemoSubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('AdvDemoWAP-pipName'))]"
              }
            }
          }
        ]
      }
    },

    /*
    Create WAP VM
    */
    {
      "name": "[parameters('AdvDemoWAPName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('AdvDemoStorageName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('AdvDemoWAPNicName'))]"
      ],
      "tags": {
        "displayName": "AdvDemoWAP"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('AdvDemoVmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('AdvDemoWAPName')]",
          "adminUsername": "[parameters('AdvDemoAdminUsername')]",
          "adminPassword": "[parameters('AdvDemoAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('AdvDemoWinImagePublisher')]",
            "offer": "[variables('AdvDemoWinImageOffer')]",
            "sku": "[parameters('AdvDemoWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "AdvDemoWAPOSDisk",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('AdvDemoStorageName')), '2016-01-01').primaryEndpoints.blob, variables('AdvDemoStorageAccountContainerName'), '/', parameters('AdvDemoWAPName'), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('AdvDemoWAPNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "Microsoft.Powershell.DSC",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2016-03-30",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('AdvDemoWAPName'))]"
          ],
          "tags": {
            "displayName": "WAPDSC"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.9",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "configuration": {
                "url": "[parameters('_artifactsLocation')]",
                "script": "WAPDSC.ps1",
                "function": "Main"
              },
              "configurationArguments": {
                "nodeName": "[parameters('AdvDemoWAPName')]"
              }
            }
          }
        }
      ]
    },
    /*
    Create Public IP for WAP
    */
    {
      "name": "[variables('AdvDemoWAP-pipName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "AdvDemoWAP-pip"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
        //, "dnsSettings": {
        //  "domainNameLabel": "[concat(variables('AdvDemoWAP-pipName'), "-wappip")]"
        //}
      }
    },
    {
      "name": "VNet-GWPip",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "AdvDemoGW-pip"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
        , "dnsSettings": {
          "domainNameLabel": "[concat(resourceGroup().name, 'Gateway')]"
        }
      }
    },
    /*
    Create Public IP for Client VM
    */
    {
      "name": "[variables('AdvDemoClientPIP')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "AdvDemoClient-PIP"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
        //, "dnsSettings": {
        //  "domainNameLabel": "[parameters('AdvDemoClientDNS')]"
        //}
      }
    },
    /*
    Create Client NIC
    */
    {
      "name": "[variables('AdvDemoClientNICName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[variables('AdvDemoVnetID')]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('AdvDemoClientPIP'))]"
      ],
      "tags": {
        "displayName": "AdvDemoClientNic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "10.0.0.13",
              "subnet": {
                "id": "[variables('AdvDemoSubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('AdvDemoClientPIP'))]"
              }
            }
          }
        ]
      }
    },
    /* 
    Create Client VM 
    */
    {
      "name": "[parameters('AdvDemoClientName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('AdvDemoStorageName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('AdvDemoWAPNicName'))]"
      ],
      "tags": {
        "displayName": "AdvDemoClient"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('AdvDemoVmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('AdvDemoClientName')]",
          "adminUsername": "[parameters('AdvDemoAdminUsername')]",
          "adminPassword": "[parameters('AdvDemoAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('AdvDemoClientImagePublisher')]",
            "offer": "[variables('AdvDemoClientImageOffer')]",
            "sku": "[parameters('AdvDemoClientOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "AdvDemoClientOSDisk",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('AdvDemoStorageName')), '2016-01-01').primaryEndpoints.blob, variables('AdvDemoStorageAccountContainerName'), '/', parameters('AdvDemoClientName'), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('AdvDemoClientNICName'))]"
            }
          ]
        }
      },
      "resources": []
    }
  ],
  "outputs": {}
}
