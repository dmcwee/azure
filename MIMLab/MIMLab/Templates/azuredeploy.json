{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "CorpNetName": {
        "type": "string",
        "defaultValue": "corpnet",
        "minLength": 1
      },
      "CorpNetComputers":{
        "type": "int",
        "minValue": 1,
        "maxValue": 8
      },
      "CorpNetClients":{
        "type":"int",
        "minValue":1,
        "maxValue":8
      },
      "ExtraNetName": {
        "type": "string",
        "defaultValue": "partnernet",
        "minLength": 1
      },
      "ExtraNetComputers":{
        "type": "int",
        "minValue": 1,
        "maxValue": 8
      },
      "ExtraNetClients":{
        "type": "int",
        "minValue": 1,
        "maxValue": 8
      },
      "AdminAccountName": {
        "type": "string",
        "minLength": 1,
        "defaultValue": "labadmin"
      },
      "AdminAccountPassword": {
        "type": "securestring"
      },
      "StorageType": {
          "type": "string",
          "defaultValue": "Standard_LRS",
          "allowedValues": [
              "Standard_LRS",
              "Standard_ZRS",
              "Standard_GRS",
              "Standard_RAGRS",
              "Premium_LRS"
          ]
      },
      "WindowsVersion": {
          "type": "string",
          "defaultValue": "2012-R2-Datacenter",
          "allowedValues": [
              "2008-R2-SP1",
              "2012-Datacenter",
              "2012-R2-Datacenter",
              "2016-Datacenter"
          ]
      },
      "ServerVMSize":{
        "type":"string",
        "defaultValue": "Basic_A2",
        "allowedValues": [
          "Basic_A0",
          "Basic_A1",
          "Basic_A2"
        ]
      },
      "ClientVersion":{
        "type":"string",
        "defaultValue":"Windows-10-N-x64",
        "allowedValues": [
          "Win7-SP1-ENT-N-x64",
          "Win81-ENT-N-x64",
          "Windows-10-N-x64"
        ]
      },
      "ClientVMSize":{
        "type":"string",
        "defaultValue": "Basic_A2",
        "allowedValues": [
          "Basic_A0",
          "Basic_A1",
          "Basic_A2"
        ]
      }
  },
  "variables": {
    "LabStorageTempName": "[concat('labstore', uniqueString(resourceGroup().id))]",
    "LabStorageTempNameLength": "[min(24, length(variables('LabStorageTempName')))]",
    "LabStorageName": "[substring(variables('LabStorageTempName'), 0,  variables('LabStorageTempNameLength'))]",
    "LabStorageAccountContainerName": "vhds",
    "LabIpPrefix": "10.0.0.0/16",
    "LabOSImagePublisher": "MicrosoftWindowsServer",
    "LabOSImageOffer": "WindowsServer",

    "LabClientImagePublisher":"MicrosoftVisualStudio",
    "LabClientImageOffer":"Windows",

    //"LabVmSize": "Basic_A2",
    "LabVmSize":"[parameters('ServerVMSize')]",
    "LabVNetID": "[resourceId('Microsoft.Network/virtualNetworks', 'mimnet')]",

    "CorpNetSubnetName": "[concat(parameters('CorpNetName'), '-Subnet')]",
    "CorpNetSubnetPrefix": "10.0.0.0/24",
    "CorpNetSubnetRef": "[concat(variables('LabVNetID'), '/subnets/', variables('CorpNetSubnetName'))]",

    "ExtraNetSubnetName": "[concat(parameters('ExtraNetName'), '-Subnet')]",
    "ExtraNetSubnetPrefix": "10.0.1.0/24",
    "ExtraNetSubnetRef": "[concat(variables('LabVnetID'), '/subnets/', variables('ExtraNetSubnetName'))]"
  },
  "resources": [
    /*
    Create the storage account and location for all of the VMs to store their disks
    */
    {
        "name": "[variables('LabStorageName')]",
        "type": "Microsoft.Storage/storageAccounts",
        "location": "[resourceGroup().location]",
        "apiVersion": "2015-06-15",
        "dependsOn": [ ],
        "tags": {
            "displayName": "MIMLabStorage"
        },
        "properties": {
            "accountType": "[parameters('StorageType')]"
        }
    },

    /*
    Create the Virtual Network and create the CorpNet and ExtraNet VNets
    */
    {
        "name": "mimnet",
        "type": "Microsoft.Network/virtualNetworks",
        "location": "[resourceGroup().location]",
        "apiVersion": "2015-06-15",
        "dependsOn": [ ],
        "tags": {
            "displayName": "mimnet"
        },
        "properties": {
            "addressSpace": {
                "addressPrefixes": [
                    "[variables('LabIpPrefix')]"
                ]
            },
            "subnets": [
                {
                    "name": "[variables('CorpNetSubnetName')]",
                    "properties": {
                        "addressPrefix": "[variables('CorpNetSubnetPrefix')]"
                    }
                },
                {
                    "name": "[variables('ExtraNetSubnetName')]",
                    "properties": {
                        "addressPrefix": "[variables('ExtraNetSubnetPrefix')]"
                    }
                }
            ]
        }
    },
        /*
        TODO: Create firewalls that will only allow specific web traffic between the two so we can control and test what ports are used
        in the lab.

        Create security groups which are virtual firewalls for each subnet
        
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[concat(variables('CorpNetSubnetName'), '-firewall']",
            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": []
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[concat(variables('ExtraNetSubnetName'), '-firewall']",
            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": []
            },
            "dependsOn": []
        },
        */
    /*
    Create Public IP objects for each CorpNet Computer
    */
    {
        "copy": {
          "name": "CorpNetPublicIPs",
          "count":"[parameters('CorpNetComputers')]"
        },
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[concat(parameters('CorpNetName'), copyIndex(), '-pubip')]",
        "apiVersion": "2016-03-30",
        "location": "[resourceGroup().location]",
        "properties": {
            "publicIPAllocationMethod": "Dynamic",
            "idleTimeoutInMinutes": 4
        },
        "resources": [],
        "dependsOn": []
    },

    /*
    Create Public IP objects for each CorpNet Client
    */
    {
        "copy": {
          "name": "CorpNetClientPublicIPs",
          "count":"[parameters('CorpNetClients')]"
        },
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[concat(parameters('CorpNetName'), copyIndex(), '-cl-pubip')]",
        "apiVersion": "2016-03-30",
        "location": "[resourceGroup().location]",
        "properties": {
            "publicIPAllocationMethod": "Dynamic",
            "idleTimeoutInMinutes": 4
        },
        "resources": [],
        "dependsOn": []
    },

    /*
    Create Public IP objects for each ExtraNet Computer
    */
    {
        "copy": {
          "name": "ExtraNetPublicIPs",
          "count":"[parameters('ExtraNetComputers')]"
        },
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[concat(parameters('ExtraNetName'), copyIndex(), '-pubip')]",
        "apiVersion": "2016-03-30",
        "location": "[resourceGroup().location]",
        "properties": {
            "publicIPAllocationMethod": "Dynamic",
            "idleTimeoutInMinutes": 4
        },
        "resources": [],
        "dependsOn": []
    },

    /*
    Create Public IP objects for each ExtraNet Computer
    */
    {
        "copy": {
          "name": "ExtraNetPublicIPs",
          "count":"[parameters('ExtraNetClients')]"
        },
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[concat(parameters('ExtraNetName'), copyIndex(), '-cl-pubip')]",
        "apiVersion": "2016-03-30",
        "location": "[resourceGroup().location]",
        "properties": {
            "publicIPAllocationMethod": "Dynamic",
            "idleTimeoutInMinutes": 4
        },
        "resources": [],
        "dependsOn": []
    },

    /*
    Create a NIC for each CorpNet computer
    */
    {
      "copy": {
        "name": "CorpNetNicCounter",
        "count": "[parameters('CorpNetComputers')]"
      },
      "name": "[concat(parameters('CorpNetName'), copyIndex(), '-nic')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', 'mimnet')]",
        "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('CorpNetName'), copyIndex(), '-pubip'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('CorpNetName'), copyIndex(), '-pubip'))]"
              },
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat('10.0.0.', copyIndex(10))]",
              "subnet": {
                "id": "[variables('CorpNetSubnetRef')]"
              }
            }
          }
        ]
      }
    },

    /*
    Create a NIC for each CorpNet Client computer
    */
    {
      "copy": {
        "name": "CorpNetNicCounter",
        "count": "[parameters('CorpNetClients')]"
      },
      "name": "[concat(parameters('CorpNetName'), copyIndex(), '-cl-nic')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', 'mimnet')]",
        "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('CorpNetName'), copyIndex(), '-cl-pubip'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('CorpNetName'), copyIndex(), '-cl-pubip'))]"
              },
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat('10.0.0.', copyIndex(20))]",
              "subnet": {
                "id": "[variables('CorpNetSubnetRef')]"
              }
            }
          }
        ]
      }
    },

    /*
    Create a NIC for each ExtraNet computer
    */
    {
      "copy": {
        "name": "ExtraNetNicCounter",
        "count": "[parameters('ExtraNetComputers')]"
      },
      "name": "[concat(parameters('ExtraNetName'), copyIndex(), '-nic')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', 'mimnet')]",
        "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('ExtraNetName'), copyIndex(), '-pubip'))]"
      ],
      "properties": {
        "ipConfigurations": 
        [{
          "name": "ipconfig1",
          "properties": {
            "publicIPAddress": {
              "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('ExtraNetName'), copyIndex(), '-pubip'))]"
            },
            //"privateIPAllocationMethod": "Dynamic",
            "privateIPAllocationMethod":"Static",
            "privateIPAddress": "[concat('10.0.1.', copyIndex(10))]",
            "subnet": {
              "id": "[variables('ExtraNetSubnetRef')]"
            }
          }
        }]
      }
    },

    /*
    Create a NIC for each ExtraNet computer
    */
    {
      "copy": {
        "name": "ExtraNetNicCounter",
        "count": "[parameters('ExtraNetClients')]"
      },
      "name": "[concat(parameters('ExtraNetName'), copyIndex(), '-cl-nic')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', 'mimnet')]",
        "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('ExtraNetName'), copyIndex(), '-cl-pubip'))]"
      ],
      "properties": {
        "ipConfigurations": 
        [{
          "name": "ipconfig1",
          "properties": {
            "publicIPAddress": {
              "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('ExtraNetName'), copyIndex(), '-cl-pubip'))]"
            },
            "privateIPAllocationMethod": "Static",
            "privateIPAddress": "[concat('10.0.1.', copyIndex(20))]",
            "subnet": {
              "id": "[variables('ExtraNetSubnetRef')]"
            }
          }
        }]
      }
    },

    /*
    Create CorpNet VMs
    */
    {
      "copy": {
        "count": "[parameters('CorpNetComputers')]",
        "name": "CorpNetSvrCounter"
      },
      "name": "[concat(parameters('CorpNetName'), copyIndex())]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('LabStorageName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', parameters('CorpNetName'), copyIndex(), '-nic')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('LabVmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('CorpNetName'), copyIndex())]",
          "adminUsername": "[parameters('AdminAccountName')]",
          "adminPassword": "[parameters('AdminAccountPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('LabOSImagePublisher')]",
            "offer": "[variables('LabOSImageOffer')]",
            "sku":  "[parameters('WindowsVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('CorpNetName'), copyIndex(), '-disk')]",
            "vhd": {
              "uri": "[concat('http://', variables('LabStorageName'), '.blob.core.windows.net/', variables('LabStorageAccountContainerName'), '/', parameters('CorpNetName'), copyIndex(), '-cdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('CorpNetName'), copyIndex(), '-nic'))]"
            }
          ]
        }
      }
    },

    /*
    Create CorpNet Client VMs
    */
    {
      "copy": {
        "count": "[parameters('CorpNetClients')]",
        "name": "CorpNetSvrCounter"
      },
      "name": "[concat(parameters('CorpNetName'), 'cl', copyIndex())]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('LabStorageName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', parameters('CorpNetName'), copyIndex(), '-cl-nic')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('ClientVMSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('CorpNetName'), 'cl', copyIndex())]",
          "adminUsername": "[parameters('AdminAccountName')]",
          "adminPassword": "[parameters('AdminAccountPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('LabClientImagePublisher')]",
            "offer": "[variables('LabClientImageOffer')]",
            "sku":  "[parameters('ClientVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('CorpNetName'), copyIndex(), '-cl-disk')]",
            "vhd": {
              "uri": "[concat('http://', variables('LabStorageName'), '.blob.core.windows.net/', variables('LabStorageAccountContainerName'), '/', parameters('CorpNetName'), copyIndex(), '-cl-cdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('CorpNetName'), copyIndex(), '-cl-nic'))]"
            }
          ]
        }
      }
    },

    /*
    Create ExtraNet VMs
    */
    {
      "copy": {
        "count": "[parameters('ExtraNetComputers')]",
        "name": "ExtraNetSvrCounter"
      },
      "name": "[concat(parameters('ExtraNetName'), copyIndex())]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('LabStorageName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', parameters('ExtraNetName'), copyIndex(), '-nic')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('LabVmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('ExtraNetName'), copyIndex())]",
          "adminUsername": "[parameters('AdminAccountName')]",
          "adminPassword": "[parameters('AdminAccountPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('LabOSImagePublisher')]",
            "offer": "[variables('LabOSImageOffer')]",
            "sku": "[parameters('WindowsVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('ExtraNetName'), copyIndex(), '-disk')]",
            "vhd": {
              "uri": "[concat('http://', variables('LabStorageName'), '.blob.core.windows.net/', variables('LabStorageAccountContainerName'), '/', parameters('ExtraNetName'), copyIndex(), '-cdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('ExtraNetName'), copyIndex(), '-nic'))]"
            }
          ]
        }
      }
    },

    /*
    Create ExtraNet Client VMs
    */
    {
      "copy": {
        "count": "[parameters('ExtraNetClients')]",
        "name": "ExtraNetSvrCounter"
      },
      "name": "[concat(parameters('ExtraNetName'), 'cl', copyIndex())]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('LabStorageName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', parameters('ExtraNetName'), copyIndex(), '-cl-nic')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('ClientVMSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('ExtraNetName'), 'cl', copyIndex())]",
          "adminUsername": "[parameters('AdminAccountName')]",
          "adminPassword": "[parameters('AdminAccountPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('LabClientImagePublisher')]",
            "offer": "[variables('LabClientImageOffer')]",
            "sku": "[parameters('ClientVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('ExtraNetName'), copyIndex(), '-cl-disk')]",
            "vhd": {
              "uri": "[concat('http://', variables('LabStorageName'), '.blob.core.windows.net/', variables('LabStorageAccountContainerName'), '/', parameters('ExtraNetName'), copyIndex(), '-cl-cdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('ExtraNetName'), copyIndex(), '-cl-nic'))]"
            }
          ]
        }
      }
    }
  ],

  "outputs": {
  }
}
