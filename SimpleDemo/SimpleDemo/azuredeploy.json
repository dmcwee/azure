{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "simpledemostoreType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "simpledemoVmNamePrefix": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "TspDemo"
    },
    "simpledemoDcCount": {
      "type": "int",
      "minValue": 1,
      "maxValue": 8,
      "defaultValue": 1
    },
    "simpledemodcAdminUserName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "labadmin"
    },
    "simpledemodcAdminPassword": {
      "type": "securestring"
    },
    "simpledemodcWindowsOSVersion": {
      "type": "string",
      "defaultValue": "2016-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "2016-Datacenter",
        "Windows-Server-Technical-Preview"
      ]
    },
    "simpledemoVmSize": {
      "type": "string",
      "defaultValue": "Basic_A2",
      "allowedValues": [
        "Basic_A1",
        "Basic_A2",
        "Basic_A3",
        "Basic_A4",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4"
      ]
    },
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/dmcwee/azure/tspdemos/SimpleDemo/SimpleDemo/CustomScripts/"
    },
    "_artifactFileName": {
      "type": "string",
      "defaultValue": "DCPrep.ps1"
    }
  },
  "variables": {
    //Storage Account Variables
    "tempstoreName": "[toLower(concat(resourceGroup().name, uniqueString(resourceGroup().id)))]",
    "simpledemostoreNameLength": "[min(24, length(variables('tempstoreName')))]",
    "simpledemostoreName": "[substring(variables('tempstoreName'), 0, variables('simpledemostoreNameLength'))]",

    //OS Image Provider Variables
    "simpledemodcImagePublisher": "MicrosoftWindowsServer",
    "simpledemodcImageOffer": "WindowsServer",

    //Network Variables
    "simpledemonetName": "simpledemonet",
    "simpledemonetPrefix": "10.0.0.0/16",
    "simpledemonetSubnet1Name": "Subnet-1",
    "simpledemonetSubnet1Prefix": "10.0.0.0/24",
    "simpledemodcVnetID": "[resourceId('Microsoft.Network/virtualNetworks', 'simpledemonet')]",
    "simpledemodcSubnetRef": "[concat(variables('simpledemodcVnetID'), '/subnets/', variables('simpledemonetSubnet1Name'))]",
    "simpledemoGatewaySubnetName": "GatewaySubnet",

    //VM Variables
    "simpledemodcStorageAccountContainerName": "vhds"
  },
  "resources": [
    /*
    Create the Storage Account for the demo
    */
    {
      "name": "[variables('simpledemostoreName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-01-01",
      "sku": {
        "name": "[parameters('simpledemostoreType')]"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "simpledemostore"
      },
      "kind": "Storage"
    },

    /*
    Create the virtual network and subnet
    */
    {
      "name": "[variables('simpledemonetName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "simpledemonet"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('simpledemonetPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('simpledemonetSubnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('simpledemonetSubnet1Prefix')]"
            }
          },
          {
            "name": "[variables('simpledemoGatewaySubnetName')]",
            "properties": {
              "addressPrefix": "10.0.1.0/24"
            }
          }
        ]
      }
    },

    /*
    Create Public IP objects for the gateway
    
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('simpledemoVmNamePrefix'), '-gwpip')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4
      },
      "resources": [],
      "dependsOn": []
    },
    
    It appears the Virtual Network Gateway is not supported in the Azure RM Template...
    {
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[concat(parameters('simpledemoVmNamePrefix'), '-gateway')]",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "scale": null,
      "properties": {
        "ipConfigurations": [
          {
            "name": "default",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('simpledemoVmNamePrefix'), '-gwpip'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('simpledemonetName'), variables('simpledemoGatewaySubnetName'))]"
              }
            }
          }
        ],
        "sku": {
          "name": "Basic",
          "tier": "Basic",
          "capacity": 2
        },
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "enableBgp": false,
        "activeActive": false,
        "vpnClientConfiguration": {
          "vpnClientAddressPool": {
            "addressPrefixes": [
              "192.168.10.0/24"
            ]
          },
          "vpnClientProtocols": [
            "SSTP"
          ],
          "vpnClientRootCertificates": [
            {
              "name": "AzureGatewayRootCert",
              "properties": {
                "publicCertData": "MIIC+TCCAeGgAwIBAgIQUlvZgSVPCo1FUmPWLj5yqDANBgkqhkiG9w0BAQsFADAf MR0wGwYDVQQDDBRHYXRld2F5VGVzdDJSb290Q2VydDAeFw0xODAxMjUxOTIwMzJa Fw0xOTAxMjUxOTQwMzJaMB8xHTAbBgNVBAMMFEdhdGV3YXlUZXN0MlJvb3RDZXJ0 MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA++8zGneEVvFR6zy7gQIc b/Cu5ic9cTMHUOcb652Id1ocxZ0Ir4/oIywJgmALJSS7Li7lAAVj0GlJLYl84ljT W5umQJlvuRGZlSTMXJn1bMZ5kj4rRQAfq544Kj1dAwrs95L+9Pv3B+w/mG8r4Pby ko6XTSSHgT3PmSsTGVIytllj/kaxdSe8qcR6+sjbFtybdy2GONyLhHyccAMGEZz7 D0PpZIm2KOrtnJJZvMjWmYJzD79tcHJn1LtVKQ5azbCek7lhq5ocTgDAFA9Xfiso CLYEn+mZJG2BUn5scg+Z2IGfWRlqKBMwzbYkjBAkKuKqFvL/eAOlxudnP60BCGbI 1QIDAQABozEwLzAOBgNVHQ8BAf8EBAMCAgQwHQYDVR0OBBYEFInQD5lgUDAbAxEq wMUsccEibYBdMA0GCSqGSIb3DQEBCwUAA4IBAQC/l66A+dQ1QH3gTTaNA4tiS12A s67yGNJnNjJk6OARqTVtgbHf/uFWDJ2LDUIaV7FpXE3i1cFj+QTes/nEbaaBv3/s dGmJQdc5PJQEiglNT+45CfkRq/kdeWVMfhC8FBtjXHkAJRItyhBOe8+0ePD5/zuJ U1ueS0AJeqXin62+ES7ykzna7TMGQeNTgJfi2GarLfs50XyiseAHVyECuqJryhBG RQeE1L3gSCDir0RTbqGzO9tE3XyWhF4kDPrdoE+R5Dn7fMSqz4pCsNVMqe4UTBTC 9WLQVVKUTcFZYuNq7gAD2SPTcz38taVfCrvO+cfN07oM2ysnuhiKp+GtKhug"
              }
            }
          ],
          "vpnClientRevokedCertificates": []
        },
        "bgpSettings": {
          "asn": 65515,
          "bgpPeeringAddress": "10.0.1.254",
          "peerWeight": 0
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('simpledemoVmNamePrefix'), '-gwpip'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('simpledemonetName'), variables('simpledemoGatewaySubnetName'))]"
      ]
    },
    */

    /*
    Create Public IP objects for each VM
    */
    {
      "copy": {
        "name": "CorpNetPublicIPs",
        "count": "[parameters('simpledemoDcCount')]"
      },
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('simpledemoVmNamePrefix'), copyIndex(), '-pip')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4
      },
      "resources": [],
      "dependsOn": []
    },

    /*
    Create the NICs for each VM
    */
    {
      "copy": {
        "name": "NicCreationCounter",
        "count": "[parameters('simpledemoDcCount')]"
      },
      "name": "[concat(parameters('simpledemoVmNamePrefix'), copyIndex(), '-nic')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'simpledemonet')]"
      ],
      "tags": {
        "displayName": "simpledemodcNic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "publicIpAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('simpledemoVmNamePrefix'), copyIndex(), '-pip'))]"
              },
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat('10.0.0.', copyIndex(10))]",
              "subnet": {
                "id": "[variables('simpledemodcSubnetRef')]"
              }
            }
          }
        ]
      }
    },

    /*
    Create the DCs
    */
    {
      "copy": {
        "name": "simpledemoVmCounter",
        "count": "[parameters('simpledemoDcCount')]"
      },
      "name": "[concat(parameters('simpledemoVmNamePrefix'), '-DC', copyIndex())]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('simpledemostoreName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('simpledemoVmNamePrefix'), copyIndex(), '-nic'))]"
      ],
      "tags": {
        "displayName": "[concat('DC ', copyIndex())]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('simpledemoVmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('simpledemoVmNamePrefix'), '-DC', copyIndex())]",
          "adminUsername": "[parameters('simpledemodcAdminUsername')]",
          "adminPassword": "[parameters('simpledemodcAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('simpledemodcImagePublisher')]",
            "offer": "[variables('simpledemodcImageOffer')]",
            "sku": "[parameters('simpledemodcWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('simpledemoVmNamePrefix'), '-dc', copyIndex(), '-osdisk')]",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('simpledemostoreName')), '2016-01-01').primaryEndpoints.blob, variables('simpledemodcStorageAccountContainerName'), '/', parameters('simpledemoVmNamePrefix'), '-dc', copyIndex(), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "[concat(parameters('simpledemoVmNamePrefix'), '-dc', copyIndex(), '-datadisk')]",
              "caching": "None",
              "createOption": "Empty",
              "diskSizeGB": "50",
              "lun": 0,
              "vhd": {
                "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('simpledemostoreName')), '2016-01-01').primaryEndpoints.blob, variables('simpledemodcStorageAccountContainerName'), '/', parameters('simpledemoVmNamePrefix'), '-dc', copyIndex(), '-datadisk.vhd')]"
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('simpledemoVmNamePrefix'), copyIndex(), '-nic'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "DCPrep",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2016-03-30",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('simpledemoVmNamePrefix'), '-DC', copyIndex()))]"
          ],
          "tags": {
            "displayName": "DCPrep"
          },
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.4",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[concat(parameters('_artifactsLocation'), parameters('_artifactFileName'))]"
              ],
              "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', parameters('_artifactFileName'))]"
            },
            "protectedSettings": {}
          }
        }
      ]
    }
  ],
  "outputs": {}
}
